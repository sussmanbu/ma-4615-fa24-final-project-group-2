---
title: "Second Post"
author: "Group 2"
editor: visual
description: "This post details our dataset seleciton and data cleaning"
date: "2024-10-18"
---

During the second week, we decided to use our first dataset for the final project–The Rhode Island traffic stop dataset. We believe that this dataset will allow us to investigate most effectively certain racial disparities that may exist in traffic law enforcement. The dataset is sourced from Kaggle, and was collected by the Standford Open Police Project to investigate policing patterns.

Research questions to consider with this dataset:

-   Does race impact the duration of stop and the extent of search?
-   What is the most common reason for stops?
-   Does the proportion of drug-related stops to total stops vary significantly between races? 
-   Is there a correlation between race and stop_outcome = arrest?
-   What is the distribution of stops in districts in terms of race?
-   What is the probability a search is conducted depending on the race?
-   Controlling for stop date, gender, and district, what’s the correlation between race and arrest?

We also did some basic data cleaning, which involves uploading the data, taking out empty rows, taking out the columns county name because all the data is null and state because the entire dataset is collected from Rhode Island. We also modified the stop time to make it show military time, making it easier to read. Here is the code for all the modification:

```{r}
# Load packages
library(tidyverse)
library(dplyr)

# Load data
traffic_data <- read_csv(here::here("dataset", "Traffic stops in Rhode Island.csv"))

# Clean data
traffic_data_cleaned <- traffic_data %>%
  filter(!is.na(driver_race) & 
           !is.na(driver_gender) & 
           !is.na(violation_raw) & 
           !is.na(violation) & 
           !is.na(search_conducted) & 
           !is.na(stop_outcome) & 
           !is.na(stop_duration) & 
           !is.na(drugs_related_stop)) %>%
  select(-state, -county_name)

# Change stop_time to numeric
traffic_data_cleaned$stop_time <- as.numeric(traffic_data_cleaned$stop_time)


# Function to convert sec to time of day
secs_to_time_of_day <- function(seconds) {
  hours <- (seconds %/% 3600) %% 24
  minutes <- (seconds %/% 60) %% 60
  secs <- seconds %% 60
  sprintf("%02d:%02d:%02d", hours, minutes, secs)
}

# Apply conversion function
traffic_data_cleaned$stop_time <- sapply(traffic_data_cleaned$stop_time, secs_to_time_of_day)

# Save cleaned data as an .rds file
# How to call data later: cleaned_data <- read_rds(here::here("dataset", "cleaned_dataset.rds"))
saveRDS(traffic_data_cleaned, here::here("dataset", "cleaned_dataset.rds"))

```
