{
  "hash": "4a25c45198eb22bfb8faa02018faa2a5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Second Post\"\nauthor: \"Group 2\"\neditor: visual\ndescription: \"This post details our dataset seleciton and data cleaning\"\ndate: \"2024-10-18\"\n---\n\n\nDuring the second week, we decided to use our first dataset for the final project–The Rhode Island traffic stop dataset. We believe that this dataset will allow us to investigate most effectively certain racial disparities that may exist in traffic law enforcement. The dataset is sourced from Kaggle, and was collected by the Standford Open Police Project to investigate policing patterns.\n\nResearch questions to consider with this dataset:\n\n-   Does race impact the duration of stop and the extent of search?\n-   What is the most common reason for stops?\n-   Does the proportion of drug-related stops to total stops vary significantly between races? \n-   Is there a correlation between race and stop_outcome = arrest?\n-   What is the distribution of stops in districts in terms of race?\n-   What is the probability a search is conducted depending on the race?\n-   Controlling for stop date, gender, and district, what’s the correlation between race and arrest?\n\nWe also did some basic data cleaning, which involves uploading the data, taking out empty rows, taking out the columns county name because all the data is null and state because the entire dataset is collected from Rhode Island. We also modified the stop time to make it show military time, making it easier to read. Here is the code for all the modification, which can be found in the 'load_and_clean_data.R':\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n\n# Load data\ntraffic_data <- read_csv(here::here(\"dataset\", \"Traffic stops in Rhode Island.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 91741 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (9): state, driver_gender, driver_race, violation_raw, violation, searc...\nlgl  (4): county_name, search_conducted, is_arrested, drugs_related_stop\ndate (1): stop_date\ntime (1): stop_time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Clean data\ntraffic_data_cleaned <- traffic_data %>%\n  filter(!is.na(driver_race) & \n           !is.na(driver_gender) & \n           !is.na(violation_raw) & \n           !is.na(violation) & \n           !is.na(search_conducted) & \n           !is.na(stop_outcome) & \n           !is.na(stop_duration) & \n           !is.na(drugs_related_stop)) %>%\n  select(-state, -county_name)\n\n# Change stop_time to numeric\ntraffic_data_cleaned$stop_time <- as.numeric(traffic_data_cleaned$stop_time)\n\n\n# Function to convert sec to time of day\nsecs_to_time_of_day <- function(seconds) {\n  hours <- (seconds %/% 3600) %% 24\n  minutes <- (seconds %/% 60) %% 60\n  secs <- seconds %% 60\n  sprintf(\"%02d:%02d:%02d\", hours, minutes, secs)\n}\n\n# Apply conversion function\ntraffic_data_cleaned$stop_time <- sapply(traffic_data_cleaned$stop_time, secs_to_time_of_day)\n\n# Save cleaned data as an .rds file\n# How to call data later: cleaned_data <- read_rds(here::here(\"dataset\", \"cleaned_dataset.rds\"))\nsaveRDS(traffic_data_cleaned, here::here(\"dataset\", \"cleaned_dataset.rds\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}